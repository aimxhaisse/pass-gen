#! /usr/bin/python

import argparse
import random

def get_number_char(string):
    numbers = [x.strip(' ') for x in string.split('-')]
    try:
        numbers = list(map(int, numbers))
        if len(numbers) > 2:
            raise ValueError
        if len(numbers) == 2 and numbers[0] > numbers[1]:
            msg = "%r: the range is not valid (%d > %d)" % (string, numbers[0], numbers[1])
            raise argparse.ArgumentTypeError(msg)
    except ValueError:
        msg = "%r is not a valid number or range of number (n1-n2)" % string
        raise argparse.ArgumentTypeError(msg)    
    return numbers

def run_gen(args):
    if len(args.l) == 2:
        end = random.choice(range(args.l[0], args.l[1]))
    else:
        end = args.l[0]
    for j in range(0, args.n):
        passwd = ''
        for i in range(0, end):
            passwd = passwd + random.choice(args.s)
        print(passwd)

def main():
    parser = argparse.ArgumentParser(
        description='A tool to generate password')
    parser.add_argument("-l",  help="Number of characters, it can be either a single number or a range (i.e. 10-15)", type=get_number_char, default="8")
    parser.add_argument("-s", help="Specify a string with the characters to be used", default="@1234567890!\"ยง$%&/()=?\\][{^+'#*~_-.:,;|<>qwertzuioplkjhgfdsayxcvbnm")
    parser.add_argument("-n", help="Numbers of generated password", default=1, type=int, required=False)
    args = parser.parse_args()
    run_gen(args)


if __name__== "__main__":
    main()
